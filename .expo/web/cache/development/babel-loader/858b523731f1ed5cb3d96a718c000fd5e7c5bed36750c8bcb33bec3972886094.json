{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { FlyerScreen, FlyerTypes } from \"./Screens/Flyers.js\";\nimport { OptionsScreen } from \"./Screens/OptionsScreen.js\";\nimport { AddFlyerScreen } from \"./Screens/AddFlyer.js\";\nimport { styles } from \"./utils/Styles\";\nimport { useState, useRef } from 'react';\nimport { alertType, FreeAlerts } from \"./utils/Alerts\";\nimport { PaperProvider, Button, TextInput, Snackbar } from 'react-native-paper';\nimport MyActivityComponent from \"./utils/PaperComponents\";\nimport { Picker } from '@react-native-picker/picker';\nimport { CityData } from \"./utils/Data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HERE_API_KEY = \"jTyIvP7FORzSbxrTjR11jNdScr8fDS8HXLOkObeqRvo\";\nvar HERE_APP_ID = \"TiGEKf1vgpGbsGfZ3sIQ\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(SafeAreaProvider, {\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Pick Option\",\n          component: OptionsScreen,\n          options: {\n            headerShown: true,\n            headerTitleAlign: \"center\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Free Flyers App\",\n          component: HomeScreen,\n          options: {\n            headerShown: true,\n            headerTitleAlign: \"center\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Flyers\",\n          component: FlyerScreen,\n          options: {\n            headerShown: true,\n            headerTitleAlign: 'center'\n          }\n        })]\n      })\n    })\n  });\n}\n;\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  console.log('Home Screen Called');\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    number = _React$useState2[0],\n    onChangeNumber = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    location = _React$useState4[0],\n    onLocationUpdate = _React$useState4[1];\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    lat = _useState2[0],\n    setLat = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    long = _useState4[0],\n    setLong = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var geolocationAPI = navigator.geolocation;\n  var getUserCoordinates = function getUserCoordinates() {\n    if (!geolocationAPI) {\n      console.log('Geolocation API is not available in your browser!');\n      setError('Geolocation API is not available in your browser!');\n    } else {\n      geolocationAPI.getCurrentPosition(function (position) {\n        var coords = position.coords;\n        setLat(coords.latitude);\n        setLong(coords.longitude);\n        console.log('Latitude and Longitude');\n        console.log({\n          lat: lat,\n          long: long\n        });\n      }, function (error) {\n        console.log('Something went wrong getting your position!');\n        setError('Something went wrong getting your position!');\n      });\n    }\n  };\n  if (!lat) {\n    getUserCoordinates();\n  } else {\n    if (location == '') {\n      getLocationFromGeoCordinates(lat, long);\n    }\n  }\n  function getLocationFromGeoCordinates(latitude, longitude) {\n    var url = 'https://revgeocode.search.hereapi.com/v1/revgeocode?apikey=' + HERE_API_KEY + '&at=' + latitude + ',' + longitude + '&lang=en-US';\n    fetch(url).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      var items = json['items'];\n      var firstObject = items[0];\n      var add = firstObject['address'];\n      var city = add['city'];\n      if (city != '') {\n        onLocationUpdate(city);\n        setLoading(false);\n      }\n    }).catch(function (error) {\n      return console.error(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }\n  function setLoading(status) {\n    console.log('setLoading');\n    console.log(status);\n  }\n  var loginUser = function loginUser(number) {\n    console.log(\"Check and log in user\");\n    FreeAlerts(alertType.Success);\n    if (number == '7887680353' || number == '8104055652') {\n      navigation.navigate('Flyers', {\n        isPrivate: FlyerTypes.Private\n      });\n    } else {\n      navigation.navigate('Flyers', {\n        isPrivate: FlyerTypes.Public\n      });\n    }\n  };\n  var loginCheck = function loginCheck(number) {\n    navigation.navigate('Flyers', {\n      isPrivate: FlyerTypes.Private\n    });\n    return;\n    console.log(location);\n    if (location == '' || location == \"false\") {\n      onToggleSnackBar();\n      return;\n    }\n    var num = number.replace(\".\", '');\n    if (isNaN(num)) {\n      FreeAlerts(alertType.InvalidInput);\n    } else {\n      if (checkPhone(num)) {\n        loginUser(num);\n      } else {\n        FreeAlerts(alertType.InvalidInput);\n      }\n    }\n  };\n  var checkPhone = function checkPhone(phoneNumber) {\n    if (!/(^\\d{10,14}$)|(^\\d{5}-\\d{4}$)/.test(phoneNumber)) {\n      return false;\n    }\n    return true;\n  };\n  function locationPicked(itemValue, itemIndex) {\n    console.log('itemValue - ' + itemValue);\n    console.log('itemIndex - ' + itemIndex);\n    onLocationUpdate(itemValue);\n  }\n  var pickerRef = useRef();\n  function openPicker() {\n    pickerRef.current.focus();\n  }\n  function closePicker() {\n    pickerRef.current.blur();\n  }\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    visible = _React$useState6[0],\n    setVisible = _React$useState6[1];\n  var onToggleSnackBar = function onToggleSnackBar() {\n    return setVisible(!visible);\n  };\n  var onDismissSnackBar = function onDismissSnackBar() {\n    return setVisible(false);\n  };\n  return _jsx(PaperProvider, {\n    theme: {\n      version: 2\n    },\n    children: _jsx(SafeAreaView, {\n      style: styles.safeArea,\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          style: styles.pageTitle,\n          children: \" Welcome to Free Flyers App \"\n        }), _jsx(Text, {\n          style: styles.paragraph,\n          children: \" Please enter you phone number: \"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: onChangeNumber,\n          value: number,\n          maxLength: 10,\n          placeholder: \"Phone Number\",\n          inputMode: \"numeric\",\n          mode: \"outlined\",\n          keyboardType: \"phone-pad\"\n        }), _jsx(Button, {\n          mode: \"contained\",\n          style: styles.button,\n          onPress: function onPress() {\n            loginCheck(number);\n          },\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \"Get Flyers\"\n          })\n        }), _jsxs(View, {\n          children: [_jsxs(Text, {\n            style: styles.paragraph,\n            children: [\"Your coordinates are: \", \"\\n\", \" \", lat, \"  \", long]\n          }), _jsx(View, {\n            children: _jsx(MyActivityComponent, {})\n          }), _jsx(Text, {\n            style: styles.paragraph,\n            children: \"Your location:\"\n          })]\n        }), _jsxs(Picker, {\n          ref: pickerRef,\n          mode: \"dialog\",\n          style: styles.picker,\n          selectedValue: location,\n          onValueChange: function onValueChange(itemValue, itemIndex) {\n            return locationPicked(itemValue, itemIndex);\n          },\n          children: [_jsx(Picker.Item, {\n            label: \"Select Your Location\",\n            value: false\n          }, \"0\"), CityData.map(function (item) {\n            return _jsx(Picker.Item, {\n              label: item.city_label,\n              value: item.city_label\n            }, item.id);\n          })]\n        }), _jsx(View, {\n          style: styles.containerSnackbar,\n          children: _jsx(Snackbar, {\n            visible: visible,\n            style: styles.snackbar,\n            duration: 2000,\n            elevation: \"0\",\n            onDismiss: onDismissSnackBar,\n            action: {\n              label: _jsx(Text, {\n                style: styles.snackbarButton,\n                children: \"Close\"\n              }),\n              onPress: function onPress() {}\n            },\n            children: \"Please Select Location First.\"\n          })\n        })]\n      })\n    })\n  });\n};","map":{"version":3,"names":["React","Text","View","Pressable","NavigationContainer","useNavigation","SafeAreaProvider","SafeAreaView","createNativeStackNavigator","FlyerScreen","FlyerTypes","OptionsScreen","AddFlyerScreen","styles","useState","useRef","alertType","FreeAlerts","PaperProvider","Button","TextInput","Snackbar","MyActivityComponent","Picker","CityData","jsx","_jsx","jsxs","_jsxs","HERE_API_KEY","HERE_APP_ID","Stack","App","children","Navigator","Screen","name","component","options","headerShown","headerTitleAlign","HomeScreen","_ref","navigation","console","log","_React$useState","_React$useState2","_slicedToArray","number","onChangeNumber","_React$useState3","_React$useState4","location","onLocationUpdate","_useState","_useState2","lat","setLat","_useState3","_useState4","long","setLong","_useState5","_useState6","error","setError","geolocationAPI","navigator","geolocation","getUserCoordinates","getCurrentPosition","position","coords","latitude","longitude","getLocationFromGeoCordinates","url","fetch","then","response","json","items","firstObject","add","city","setLoading","catch","finally","status","loginUser","Success","navigate","isPrivate","Private","Public","loginCheck","onToggleSnackBar","num","replace","isNaN","InvalidInput","checkPhone","phoneNumber","test","locationPicked","itemValue","itemIndex","pickerRef","openPicker","current","focus","closePicker","blur","_React$useState5","_React$useState6","visible","setVisible","onDismissSnackBar","theme","version","style","safeArea","container","pageTitle","paragraph","input","onChangeText","value","maxLength","placeholder","inputMode","mode","keyboardType","button","onPress","text","ref","picker","selectedValue","onValueChange","Item","label","map","item","city_label","id","containerSnackbar","snackbar","duration","elevation","onDismiss","action","snackbarButton"],"sources":["/Users/girish/Projects/Private/freeflyer/App.js"],"sourcesContent":["import * as React from 'react';\n\nimport { Text, View, Pressable } from 'react-native';\n\n\nimport {NavigationContainer, useNavigation} from '@react-navigation/native';\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\n\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\n\nimport {FlyerScreen, FlyerTypes} from './Screens/Flyers.js';\n\nimport {OptionsScreen} from './Screens/OptionsScreen.js';\nimport {AddFlyerScreen} from './Screens/AddFlyer.js';\n\nimport { styles } from \"./utils/Styles\";\nimport { useState, useRef } from 'react';\nimport {alertType, FreeAlerts} from './utils/Alerts'; \n\nimport { PaperProvider, Button, TextInput, Snackbar } from 'react-native-paper';\nimport  MyActivityComponent  from './utils/PaperComponents';\n\nimport {Picker} from '@react-native-picker/picker';\nimport {CityData} from './utils/Data';\n\n// import H from \"@here/maps-api-for-javascript\";\nconst HERE_API_KEY = \"jTyIvP7FORzSbxrTjR11jNdScr8fDS8HXLOkObeqRvo\"\nconst HERE_APP_ID = \"TiGEKf1vgpGbsGfZ3sIQ\"\n\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App(){\n  return (\n    <SafeAreaProvider>\n      <NavigationContainer>\n        <Stack.Navigator>\n\n         <Stack.Screen\n            name=\"Pick Option\"\n            component={OptionsScreen}\n            options={{headerShown: true, headerTitleAlign: \"center\",}}\n          />\n\n          <Stack.Screen\n            name=\"Free Flyers App\"\n            component={HomeScreen}\n            options={{headerShown: true, headerTitleAlign: \"center\",}}\n          />\n\n         \n          <Stack.Screen \n          name=\"Flyers\" \n          component={FlyerScreen} \n          options={{headerShown: true, headerTitleAlign: 'center'}}\n          />\n\n          {/*<Stack.Screen\n            name=\"Add Flyers\"\n            component={AddFlyerScreen}\n            options={{headerShown: true, headerTitleAlign: \"center\",}}\n          />*/}\n\n        </Stack.Navigator>\n      </NavigationContainer>\n    </SafeAreaProvider>  \n  );\n};\n\n\nconst HomeScreen = ({navigation}) => {\n\n  console.log('Home Screen Called');\n\n  const [number, onChangeNumber] = React.useState('');\n\n  const [location, onLocationUpdate] = React.useState('');\n\n\n  const [lat, setLat] = useState(null);\n  const [long, setLong] = useState(null);\n  const [error, setError] = useState(\"\");\n\n\n// var successHandler = function(position) { \n//   alert(position.coords.latitude); \n//   alert(position.coords.longitude); \n// }; \n\n// var errorHandler = function (errorObj) { \n//   alert(errorObj.code + \": \" + errorObj.message); \n\n//   alert(\"something wrong take this lat \" + 26.0546106 ); \n//   alert(\"something wrong take this lng \" +-98.3939791); \n\n// }; \n// function getLocation(){\n//     navigator.geolocation.getCurrentPosition( \n//     successHandler, errorHandler, \n//     {enableHighAccuracy: true, maximumAge: 10000});\n// }\n  // getLocation()\n\n\n  const geolocationAPI = navigator.geolocation;  \n\n  const getUserCoordinates = () => {\n    if (!geolocationAPI) {\n      console.log('Geolocation API is not available in your browser!')\n      setError('Geolocation API is not available in your browser!')\n    } else {\n      geolocationAPI.getCurrentPosition((position) => {\n        const { coords } = position;\n        setLat(coords.latitude);\n        setLong(coords.longitude);\n        console.log('Latitude and Longitude');\n        console.log({lat, long});\n\n      }, (error) => {\n        console.log('Something went wrong getting your position!')\n        setError('Something went wrong getting your position!')\n      })\n    }\n  }\n\n  if (!lat) {\n    getUserCoordinates();\n  }else{\n    if (location == ''){\n      // Latitude  21.146633\n      // Longitude 79.088860\n      getLocationFromGeoCordinates(lat,long)\n      \n    }\n  }\n\n\n  //------ Maps API Geocoding\n\n\nfunction getLocationFromGeoCordinates(latitude, longitude){\n\n    const url = 'https://revgeocode.search.hereapi.com/v1/revgeocode?apikey='+ HERE_API_KEY + '&at='+ latitude +','+longitude+'&lang=en-US'\n    \n    fetch(url)\n        .then((response) => response.json())\n        .then((json) => {\n\n            const items = json['items']\n            const firstObject = items[0];\n            const add = firstObject['address']\n            const city = add['city']\n            \n            if (city != ''){\n              onLocationUpdate(city);\n              setLoading(false);\n              // setSelectedCity(location);\n            }\n\n\n        })\n        .catch((error) => console.error(error))\n        .finally(() => setLoading(false));\n}\n\nfunction setLoading(status){\n    console.log('setLoading');\n    console.log(status);\n    // MyActivityComponent.setAnimate(status);\n}\n\n//-----Maps API Geocoding\n\n\n  const loginUser = (number) => {\n    //use navigation hook shown as below\n    // const navigation = useNavigation();\n\n    console.log(\"Check and log in user\");    \n    FreeAlerts(alertType.Success);\n\n    //TODO: remove after testing\n    if (number == '7887680353' || number == '8104055652'){\n      navigation.navigate('Flyers', {isPrivate: FlyerTypes.Private});\n    }else{\n      navigation.navigate('Flyers', {isPrivate: FlyerTypes.Public});\n    }\n    \n   }\n\n\n  const loginCheck = (number) => {\n\n    // TODO: Testing\n    navigation.navigate('Flyers', {isPrivate: FlyerTypes.Private});\n    // navigation.navigate('Pick Option', {navigation});\n    return;\n      \n    console.log(location);\n\n    //Location check\n    if (location == '' || location == \"false\"){\n      onToggleSnackBar();\n      return;\n    }\n\n    \n    let num = number.replace(\".\", '');\n\n    if(isNaN(num)){\n       // It's not a number\n      FreeAlerts(alertType.InvalidInput);\n    }else{\n      if (checkPhone(num)){\n        loginUser(num);\n      }else{\n        FreeAlerts(alertType.InvalidInput);\n      }\n    }      \n\n  } \n\n\n  // validate phone number length between 10-14\n  // 12345-12340 and 1234512345 both work as expected\n\n  const checkPhone = phoneNumber => {\n    if (!/(^\\d{10,14}$)|(^\\d{5}-\\d{4}$)/.test(phoneNumber)) {\n      return false;\n    }\n    return true\n  };\n\n\n  function locationPicked(itemValue, itemIndex){\n    console.log('itemValue - ' + itemValue);\n    console.log('itemIndex - ' + itemIndex);\n    onLocationUpdate(itemValue)\n  }\n    \n\n  const pickerRef = useRef();\n\n  function openPicker() {\n    pickerRef.current.focus();\n  }\n\n  function closePicker() {\n    pickerRef.current.blur();\n  }\n\n\n  const [visible, setVisible] = React.useState(false);\n\n  const onToggleSnackBar = () => setVisible(!visible);\n\n  const onDismissSnackBar = () => setVisible(false);\n\n\n  return (\n    <PaperProvider theme={{ version: 2 }}>\n    <SafeAreaView style={styles.safeArea}>\n    <View style={styles.container}>\n      <Text style={styles.pageTitle}> Welcome to Free Flyers App </Text>\n      <Text style={styles.paragraph}> Please enter you phone number: </Text>\n\n      <TextInput\n        style={styles.input}\n        onChangeText={onChangeNumber}\n        value={number}\n        maxLength={10}\n        placeholder=\"Phone Number\"\n        inputMode=\"numeric\"\n        mode=\"outlined\"\n        keyboardType='phone-pad'\n      />\n\n      <Button  mode=\"contained\" style={styles.button} onPress={() => {loginCheck(number)}}>\n        <Text style={styles.text}>Get Flyers</Text>\n      </Button>\n\n        <View> \n          \n          <Text style={styles.paragraph}>Your coordinates are: {\"\\n\"} {lat}  {long}</Text>\n                    \n          <View>        \n                <MyActivityComponent />\n          </View>\n\n          <Text style={styles.paragraph}>Your location:</Text>  \n          \n        \n         </View>\n\n\n            <Picker\n                  ref={pickerRef}\n                  mode = 'dialog' //'dropdown'\n                  // themeVariant = 'light'\n                  style={styles.picker}\n                  selectedValue={location}\n                  onValueChange={(itemValue, itemIndex) =>                  \n                      locationPicked(itemValue, itemIndex)\n                  }>\n\n                  <Picker.Item label=\"Select Your Location\" value={false} key=\"0\" />\n                  {CityData.map((item) => {\n                    return (<Picker.Item label={item.city_label} value={item.city_label} key={item.id}/>) \n                    })}\n\n              </Picker>\n\n              <View style={styles.containerSnackbar}>\n              <Snackbar\n                visible={visible}                \n                style={styles.snackbar}\n                duration = {2000}\n                elevation = '0'\n                onDismiss={onDismissSnackBar}\n                action={{\n                  label: <Text style={styles.snackbarButton}>Close</Text>  ,\n                  onPress: () => { /*Do something*/ },\n                }}\n                >\n                Please Select Location First.\n              </Snackbar>\n              </View>\n        \n\n    \n    </View>\n\n    </SafeAreaView>\n    </PaperProvider>\n  );\n\n\n\n}; //End of App\n\n\n// const FlyersScreen = ({navigation, route}) => {\n//   return <Text>This is {route.params.name}'s profile</Text>;\n// };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}